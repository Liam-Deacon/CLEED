DESCRIPTION="A Massively Spiffy Yet Delicately Unobtrusive Compression Library"
HOMEPAGE="http://www.zlib.net/"
SRC_URI="http://www.zlib.net/${PN}-${PV}.tar.bz2"
SRC_DIR=${PN}-${PV}
PATCH_URI="01-zlib-1.2.7-1-buildsys.patch"

# Normally, for CHOST=mingw, mgwport uses the "native" form
# C:/MinGW for --prefix.  However, sometimes we might not want
# that (e.g. mingw-autoconf, mingw-automake) so the following
# setting can be used to force /mingw:
# RESTRICT=native-prefix

zlib_abi=1
mini_abi=1
PKG_NAMES="${PN} ${PN} ${PN} libz libz minizip libminizip libminizip"
PKG_COMPTYPES="doc man lic dll-${zlib_abi} dev bin dll-${mini_abi} dev"
PKG_CONTENTS[0]="--exclude LICENSE share/doc/MinGW share/doc/${PN}/${PV}"
PKG_CONTENTS[1]="share/man"
PKG_CONTENTS[2]="share/doc/${PN}/${PV}/LICENSE"
PKG_CONTENTS[3]="bin/libz*dll"
PKG_CONTENTS[4]="include/z* lib/libz* lib/pkgconfig/z*pc"
PKG_CONTENTS[5]="bin/*.exe"
PKG_CONTENTS[6]="bin/libminizip*dll"
PKG_CONTENTS[7]="include/minizip lib/libminizip* lib/pkgconfig/minizip*pc"

# zlib configure script is not autoconf-based, and doesn't accept common
# options.  This is a copy of cygconf, with the value of confargs changed
# commenting out the infodir/mandir/datarootdir block, the cross-compiling
# block, and removing --srcdir and --bindir from confargs.

zlibconf() {
	local ac_config_files;
	local ac_config_headers;
	local confargs;
	local confdir;
	local configure;
	local f;
	local prefix;

#****v* cygconf/CYGCONF_SOURCE
#  DESCRIPTION
#  Set this variable to the directory containing the configure script.  This
#  is only necessary when configure is not in $S and cygconf is not being run
#  in the same subdirectory of $B which under $S contains configure.  (IOW if
#  the configure script is in $S/unix and cygconf is run from $B/unix, setting
#  CYGCONF_SOURCE would not be necessary.)
#****
	if defined CYGCONF_SOURCE && [ -x ${CYGCONF_SOURCE}/configure ]
	then
		confdir=${CYGCONF_SOURCE};
	elif [ -x ${PWD/${B}/${S}}/configure ]
	then
		confdir=${PWD/${B}/${S}};
	elif [ -x ${S}/configure ]
	then
		confdir=${S};
	else
		error "no configure script found";
	fi

	configure="${confdir}/configure"

	# AC_CONFIG_FILES should not be dist'ed, but it sometimes happens anyway
	eval $(grep -h '^ac_config_files=' ${configure})
	eval $(grep -h '^ac_config_headers=' ${configure})

	for f in ${ac_config_files} ${ac_config_headers}
	do
		if [ -f ${confdir}/${f} ]
		then
			inform "Removing ${f} to be regenerated by configure"
			rm -f ${confdir}/${f}
			ln -sf ${confdir/${S}/${B}}/${f} ${confdir}/${f}
		fi
	done

	prefix=$(__host_prefix)

	# Set default configure arguments
	confargs="--prefix=${prefix} --eprefix=${prefix} \
			  --libdir=${prefix}/lib --includedir=${prefix}/include"

#	case "x$(grep -m 1 'GNU Autoconf' ${configure} | cut -d ' ' -f 6)" in
#		x2.6[0-9]*)
#			confargs+=" --datarootdir=${prefix}/share --docdir=${prefix}/share/doc/${PN}"
#			;;
#		*)
#			confargs+=" --infodir=${prefix}/share/info --mandir=${prefix}/share/man"
#			;;
#	esac

# zlib configure doesn't recognized these options.
# Instead, it detects the $CHOST variable
#	if __cross_compiling
#	then
#		confargs+=" --build=${CBUILD} --host=${CHOST} --target=${CTARGET}"
#	fi

	# AC_HAVE_MMAP fails despite a working mmap, so we force this to yes
	# (see http://www.cygwin.com/ml/cygwin/2004-09/msg00741.html
	# and following thread for details)
	case ${CHOST} in
	*-*-cygwin*)
		export ac_cv_func_mmap_fixed_mapped=yes ;;
	esac

#****v* cygconf/CYGCONF_ARGS
#  DESCRIPTION
#  Additional flags to pass to configure, as a string.
#  NOTE
#  Flags in CYGCONF_ARGS follow, and therefore override, flags passed by default
#  and as arguments to cygconf.
#****

	verbose ${configure} ${confargs} "${@}" ${CYGCONF_ARGS} \
		|| error "configure failed"
}

export EXTRA_CFLAGS="-D__USE_MINGW_ANSI_STDIO"
export EXTRA_LDFLAGS="-shared-libgcc"
MAKEOPTS=-j1
DIFF_EXCLUDES=Makefile

src_compile() {

	# This package is not autotoolized, so skip cygautoreconf
	pushd ${B}/..
	rm -rf build/*
	popd

	lndirs
	cd ${B}
	rm -f Makefile zconf.h
	zlibconf --sharedlibdir='${exec_prefix}/bin'
	mgwmake EXTRA_CFLAGS="${EXTRA_CFLAGS}" EXTRA_LDFLAGS="${EXTRA_LDFLAGS}"

	pushd ${B}/contrib/minizip
	rm -f Makefile
	mgwautoreconf
	MGWCONF_SOURCE=${B}/contrib/minizip
	mgwconf --enable-demos \
		CFLAGS="-g -O2 -pipe -mms-bitfields -D_LARGEFILE64_SOURCE=1 -D__USE_MINGW_ANSI_STDIO -D_FILE_OFFSET_BITS=64 -DHAVE_BZIP2" \
		LIBS="-lbz2"
	mgwmake
	popd
}

src_test() {
	cd ${B}
	mgwmake check
}

src_install() {
	local _libdir=$(__host_prefix)/lib

	cd ${B}
	mgwinstall

	pushd ${B}/contrib/minizip
	mgwinstall
	popd

	dodoc contrib/minizip/MiniZip64_Changes.txt
	dodoc contrib/minizip/MiniZip64_info.txt

	chmod -x ${D}${_libdir}/libminizip.*
	sed -e '/Libs.private:/s/$/ -lbz2/' < ${D}${_libdir}/pkgconfig/minizip.pc > \
		${D}${_libdir}/pkgconfig/minizip.pc_
	mv ${D}${_libdir}/pkgconfig/minizip.pc_ ${D}${_libdir}/pkgconfig/minizip.pc

	cat ${S}/README | sed -n -e '/Copyright notice:/,$p' >\
		${B}/LICENSE.tmp
	newdoc ${B}/LICENSE.tmp LICENSE

	docinto examples
	for fn in ${S}/examples/*
	do
		dodoc ${fn}
	done
}



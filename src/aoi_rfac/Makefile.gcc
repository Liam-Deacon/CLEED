#############################################################################
# Makefile for building: caoi_rfac                                          #
# Author: Liam Deacon (Email: liam.deacon@diamond.ac.uk)                    #
# Project: CLEED                                                            #
# Date: 2014-04-01                                                          #
# Notes:                                                                    #
#	* Assumes modern GNU gcc toolchain ( > 4.4.0 )                          #
#	* Windows users: install MinGW and add bin directory to PATH            #
#   * Extra optimisations included in $(OPTS) . Linux users may wish to     #
#     add '-flto' for further HPC link time optimisations. These            #
#     optimisations are highly tuned to the platform they are compiled on   #
#     and both reduce portability and are potentially unsafe; as such it    #
#     may be better to use 'OPTS = -O2 -mtune=native' if there are concerns #
#   * For GPU acceleration uncomment the line with 'OPENCL = 1' and ensure  #
#     the OPENCL_LIB and OPENCL_INCLUDE environment variables point to the  #
#     correct locations for your platform.                                  #
#############################################################################

pkgname        = CLEED
TARGET         = caoi_rfac
PREFIX         = cleed

#============================================================================
.SUFFIXES: .o .c .h
#=============================================================================
MYPRG = ..
#INCLUDEDIR = $(MYPRG)$(SEPARATOR)INCLUDE
INCLUDEDIR = $(MYPRG)/INCLUDE
LIBDIR = .

#==flags=====================================================================
CCOMP = cc
OPT  = -O2 -pedantic-errors -mtune=native -g
DEFINES = -DCONTROL -DCONTROL_X
WARNINGS  = -Wall -Wextra
CFLAGSSUB = -c $(WARNINGS) $(DEFINES) -I$(INCLUDEDIR) -L$(LIBDIR) -L../$(LIB_DIR)
FFLAGSSUB = -c $(WARNINGS)
CFLAGS = $(WARNINGS) $(DEFINES) $(OPT) -I$(INCLUDEDIR) -L$(LIBDIR) -L../$(LIB_DIR)
LDFLAGS = -lm
#============================================================================
# Disable extreme optimisations if experiencing stability problems
# (uncomment to enable)
#OPT = -O3 -march=native -std=c99 -mfpmath=sse -ffast-math -funroll-loops
#============================================================================

OBJ = caoi_rfac_main.o \
      caoi_rfac_help.o \
      caoi_rfac_ctr.o
      

#customise the following to best suite your system

ifndef CONFIGURED
ifdef ComSpec
#setup Windows based commands
CCC           ?= g++
CFLAGS        ?= -c -Wall -O2 -mtune=native
CHK_DIR_EXISTS?= if not exist
CLASSPATH     ?=
COPY           = cmd.exe /C copy /y
COPY_FILE      = $(COPY)
COPY_DIR       = xcopy -s -q -y -i
DEL_FILE       = cmd.exe /C del /Q
FC            ?= gfortran
JCC           ?= javac
JFLAGS        ?=
LDFLAGS       ?=
LS             = cmd /C dir /B
MAKEFILE      ?= Makefile
MKDIR          = cmd.exe /C mkdir
MOVE           = cmd.exe /C move /Y
SYMLINK       ?= $(COPY)
RM             = $(DEL_FILE)
RMDIR          = cmd.exe /C rmdir /S /Q
EXE           ?= .exe

bindir        ?= $(prefix)$(SEPARATOR)bin
libexecdir    ?= $(prefix)$(SEPARATOR)libexec
libdir        ?= $(libexecdir)
localstatedir ?= $(prefix)$(SEPARATOR)var
localedir     ?= $(datarootdir)$(SEPARATOR)locale
datarootdir   ?= $(prefix)$(SEPARATOR)share
datadir       ?= $(datarootdir)
docdir        ?= $(datarootdir)$(SEPARATOR)doc$(SEPARATOR)$(pkgname)
includedir    ?= $(prefix)$(SEPARATOR)include
infodir       ?= $(datarootdir)$(SEPARATOR)info
mandir        ?= $(datarootdir)$(SEPARATOR)man
oldincludedir ?=
prefix        ?= \"$(ProgramFiles)\"
sbindir       ?=
sharedstatedir?= $(prefix)$(SEPARATOR)com
srcdir        ?= src
sysconfdir    ?= $(prefix)$(SEPARATOR)etc

#custom paths & files
BIN_DIR       ?= bin$(SEPARATOR)
EXAMPLES      ?= examples$(SEPARATOR)
INSTALL_PATH  ?= $(prefix)$(SEPARATOR)
INSTALL_NAME  ?= $(pkgname)$(SEPARATOR)
LINK_PATH     ?= 
LIB_EXT       ?= .dll
LIB_DIR       ?= lib\\
SRC           ?= src\\
SEPARATOR     ?= \\

else
#check system using uname
UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
#setup Linux based commands
CC            ?= gcc
CXX           ?= g++
CFLAGS        ?= -c -Wall  -O2 -mtune=native
CHK_DIR_EXISTS?= if not exist
CLASSPATH     ?=
COPY           = cp --force
COPY_FILE      = $(COPY)
COPY_DIR       = cp -r
DEL_FILE       = rm
EXE           ?=
FC            ?= gfortran
JCC           ?= javac
JFLAGS        ?=
LDFLAGS       ?=
LS             = ls -1
MAKEFILE      ?= Makefile
MKDIR          = mkdir -p
MOVE           = mv
SYMLINK        = ln -s
RM             = rm -f
RMDIR          = rm -rf

#custom paths & files

bindir        ?= $(prefix)/bin
libexecdir    ?= $(prefix)/libexec
libdir        ?= $(libexecdir)
localstatedir ?= $(prefix)/var
localedir     ?= $(datarootdir)/locale
datarootdir   ?= $(prefix)/share
datadir       ?= $(datarootdir)
docdir        ?= $(datarootdir)/doc/$(pkgname)
includedir    ?= $(prefix)/include
infodir       ?= $(datarootdir)/info
mandir        ?= $(datarootdir)/man
oldincludedir ?=
prefix        ?= /usr/local/
sbindir       ?=
sharedstatedir?= $(prefix)/com
srcdir        ?= src/
sysconfdir    ?= $(prefix)/etc

BIN_DIR       ?= bin/
EXAMPLES      ?= examples/
INSTALL_PATH  ?= $(prefix)
INSTALL_NAME  ?= $(pkgname)/
LINK_PATH     ?= /usr/local/bin/
LIB_EXT       ?= .a
LIB_DIR       ?= lib/
SRC           ?= src/
SEPARATOR     ?= /

endif
endif
endif

#maintain compatibility with Georg's original makefile syntax
ifdef CC
CCOMP = $(CC)
else
CCOMP = cc
endif

#setup phony targets
.PHONY = all clean install uninstall
.DEFAULT = all

all: $(TARGET)$(EXE)
	@echo
	@echo "---------------------------------------"
	@echo "Completed compiling $(TARGET)$(EXE)"
	@echo
	
$(TARGET)$(EXE): $(OBJ) 
	@echo $(TARGET).o $(OBJ)
	$(CCOMP) -o $(TARGET)$(EXE) $(OBJ) $(LDFLAGS)
	-$(MKDIR) ..$(SEPARATOR)$(BIN_DIR)
	$(MOVE) $(TARGET)$(EXE) ..$(SEPARATOR)bin$(SEPARATOR)$(TARGET)$(EXE)

%.o: $(TARGET).h
	$(CCOMP) $(CFLAGS) $(subst .o,.c,$@) -o $@
	
install:
	@echo
	@echo "---------------------------------------"
	@echo "Installing files to $(INSTALL_PATH)$(INSTALL_NAME)..."
	@echo
	@-$(MKDIR) "$(INSTALL_PATH)$(INSTALL_NAME)$(BIN_DIR)"
	@echo
	@$(COPY) $(BIN_DIR)* "$(INSTALL_PATH)$(INSTALL_NAME)$(BIN_DIR)"
	@echo
	@echo "---------------------------------------"
	@echo
	
uninstall:
	@echo
	@echo "---------------------------------------"
	@echo "Removing installed files from $(INSTALL_PATH)$(INSTALL_NAME)..."
	@echo
	@$(DEL_FILE) "$(INSTALL_PATH)$(INSTALL_NAME)$(BIN_DIR)$(TARGET)$(EXE)"
	@echo
	@echo "---------------------------------------"
	@echo

clean:
	@echo
	@echo "---------------------------------------"
	@echo "Cleaning up files..."
	@echo
	$(DEL_FILE) *.o
	@echo 
	@echo "Cleaned"
	@echo "---------------------------------------"
	@echo 
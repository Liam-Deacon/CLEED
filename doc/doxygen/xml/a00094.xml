<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="a00094" kind="file">
    <compoundname>search_func.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="a00093" local="yes">search_def.h</includes>
    <includedby refid="a00059" local="yes">csearch.h</includedby>
    <incdepgraph>
      <node id="480">
        <label>stdbool.h</label>
      </node>
      <node id="479">
        <label>search_def.h</label>
        <link refid="a00093"/>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>search_func.h</label>
        <link refid="search_func.h"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>string.h</label>
      </node>
      <node id="477">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="482">
        <label>csearch.h</label>
        <link refid="a00059"/>
      </node>
      <node id="481">
        <label>search_func.h</label>
        <link refid="search_func.h"/>
        <childnode refid="482" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00094_1a3fcf8d6d5cd987c2bb2383f8360e72e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_amoeba</definition>
        <argsstring>(real **, real *, int, real, real(*)(), int *)</argsstring>
        <name>sr_amoeba</name>
        <param>
          <type>real **</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>real(*)()</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1ab51a2a62c2a5265c5d982c8b3902b78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real sr_amotry</definition>
        <argsstring>(real **, real *, real *, int, real(*)(), int, int *, real)</argsstring>
        <name>sr_amotry</name>
        <param>
          <type>real **</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>real(*)()</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a59d6cdd1cb3df8f9a7129e5810752808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_amebsa</definition>
        <argsstring>(real **, real *, int, real *, real *, real, real(*)(), int *, real)</argsstring>
        <name>sr_amebsa</name>
        <param>
          <type>real **</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>real(*)()</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1aa49b93be5bffe057b421adba0b3c8641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real sr_amotsa</definition>
        <argsstring>(real **, real *, real *, int, real *, real *, real(*)(), int, real *, real)</argsstring>
        <name>sr_amotsa</name>
        <param>
          <type>real **</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real(*)()</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1afcb9289ef5df6550a99542bd02559736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real sr_fluct</definition>
        <argsstring>(long *)</argsstring>
        <name>sr_fluct</name>
        <param>
          <type>long *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1acbfa364c6eb5b9c159a47c536756f439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_powell</definition>
        <argsstring>(real *, real **, int, real, int *, real *, real(*)())</argsstring>
        <name>sr_powell</name>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real **</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real(*)()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a6dd2b8c829e3063ff83f871029d63f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_sa</definition>
        <argsstring>(size_t, real, const char *, const char *)</argsstring>
        <name>sr_sa</name>
        <param>
          <type>size_t</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1aa3543f1e0df760598e13df224366e2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_sx</definition>
        <argsstring>(size_t, real, const char *, const char *)</argsstring>
        <name>sr_sx</name>
        <param>
          <type>size_t</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a5acf0d464c8acfd4c85e0ee5ffb2360a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_po</definition>
        <argsstring>(size_t, const char *, const char *)</argsstring>
        <name>sr_po</name>
        <param>
          <type>size_t</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1af72bf908118f12c9cef2367d3b77d033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_er</definition>
        <argsstring>(size_t, real, const char *)</argsstring>
        <name>sr_er</name>
        <param>
          <type>size_t</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1aeb614c9c1ca1739957a2b9684b64f47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real sr_ckgeo</definition>
        <argsstring>(const real *)</argsstring>
        <name>sr_ckgeo</name>
        <param>
          <type>const real *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1ad79c1892f011b5a0681c2b08d6700630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t sr_ckrot</definition>
        <argsstring>(search_atom *, search *)</argsstring>
        <name>sr_ckrot</name>
        <param>
          <type><ref refid="a00045" kindref="compound">search_atom</ref> *</type>
        </param>
        <param>
          <type><ref refid="a00093_1a81b112c7b3449740b5983f14d93ccb82" kindref="member">search</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a9789893cdddc85f866e2286125e3d7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real sr_evalrf</definition>
        <argsstring>(real *)</argsstring>
        <name>sr_evalrf</name>
        <param>
          <type>real *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a3fc283233ce9f809fd56aace26d496a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_mkinp</definition>
        <argsstring>(const char *, const real *, size_t)</argsstring>
        <name>sr_mkinp</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const real *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a2fe9aff3983e027bb003b64c7efcb6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_mkinp_mir</definition>
        <argsstring>(const char *, const real *, size_t)</argsstring>
        <name>sr_mkinp_mir</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const real *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a83043988e2d2ec911965cd1a86544d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_mklog</definition>
        <argsstring>(const char *)</argsstring>
        <name>sr_mklog</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a2da159acb5da12fd19f247a9a1571c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_rdinp</definition>
        <argsstring>(const char *)</argsstring>
        <name>sr_rdinp</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1ad114c33b68899dc7d70e91833f47029f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_rdver</definition>
        <argsstring>(const char *, real *, real **, int)</argsstring>
        <name>sr_rdver</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>real *</type>
        </param>
        <param>
          <type>real **</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a376f584159b325ab3d6fc1d36da13eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>real</type>
        <definition>real leed_inp_debye_temp</definition>
        <argsstring>(real, real, real)</argsstring>
        <name>leed_inp_debye_temp</name>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <param>
          <type>real</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1ae47a330c14467cf3e92322cffc42b749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void search_usage</definition>
        <argsstring>(FILE *)</argsstring>
        <name>search_usage</name>
        <param>
          <type>FILE *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00094_1a7e9988fe943b640cea2f9b9851b6b1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void search_info</definition>
        <argsstring>()</argsstring>
        <name>search_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains all the function prototypes for the search program. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Georg Held <ulink url="mailto:g.held@reading.ac.uk">g.held@reading.ac.uk</ulink> </para></simplesect>
<simplesect kind="author"><para>Liam Deacon <ulink url="mailto:liam.deacon@diamond.ac.uk">liam.deacon@diamond.ac.uk</ulink></para></simplesect>
There are two code interfaces for the search routines. The original interface uses calls to routines taken from the copyrighted &quot;Numerical Recipes in C&quot;, therefore for the open source version of the code there is a new interface to the GNU Scientific Library - this is a major re-write of parts of the SEARCH code and should therefore be considered as highly experimental.</para><para><simplesect kind="warning"><para>The open source version of the search program, enabled when compiling with <computeroutput>_USE_GSL</computeroutput> defined, is highly experimental and needs significant testing. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SEARCH_FUNC.H</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>1994-2014<sp/>Georg<sp/>Held<sp/>&lt;g.held@reading.ac.uk&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>2014<sp/>Liam<sp/>Deacon<sp/>&lt;liam.deacon@diamond.ac.uk&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>3.0<sp/>or<sp/>later.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>Some<sp/>rights<sp/>reserved.<sp/>See<sp/>COPYING,<sp/>AUTHORS.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@license<sp/>GPL-3.0+<sp/>&lt;http://spdx.org/licenses/GPL-3.0+&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Changes:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GH/1995.08.21<sp/>-<sp/>creation</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LD/2014.06.15<sp/>-<sp/>added<sp/>conditional<sp/>GNU<sp/>Scientific<sp/>Library</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface<sp/>to<sp/>code.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LD/2014.10.09<sp/>-<sp/>updated<sp/>function<sp/>params<sp/>to<sp/>reflect<sp/>new<sp/>typedefs</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor">#ifndef<sp/>SEARCH_FUNC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_FUNC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00093" kindref="compound">search_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(USE_GSL)<sp/>&amp;&amp;<sp/>!defined(_USE_GSL)<sp/></highlight><highlight class="comment">/*<sp/>Original<sp/>CLEED<sp/>Interface<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sramoeba.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_amoeba(real<sp/>**,<sp/>real<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>real,<sp/>real<sp/>(*)(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">real<sp/>sr_amotry(real<sp/>**,<sp/>real<sp/>*,<sp/>real<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>real<sp/>(*)(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/>real);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sramebsa.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_amebsa(real<sp/>**,<sp/>real<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/>real<sp/>*,<sp/>real<sp/>*,<sp/>real,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real<sp/>(*)(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/>real);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">real<sp/>sr_amotsa(real<sp/>**,<sp/>real<sp/>*,<sp/>real<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>real<sp/>*,<sp/>real<sp/>*,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real<sp/>(*)(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>real<sp/>*,<sp/>real);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">real<sp/>sr_fluct(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>srpowell.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_powell(real<sp/>*,<sp/>real<sp/>**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/>real<sp/>*,<sp/>real<sp/>(*)()<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Drivers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_sa(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_sx(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_po(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_er(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>file<sp/>input|output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">real<sp/>sr_ckgeo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real<sp/>*);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sr_ckrot(<ref refid="a00045" kindref="compound">search_atom</ref><sp/>*,<sp/><ref refid="a00041" kindref="compound">search</ref><sp/>*);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">real<sp/>sr_evalrf(real<sp/>*);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>sr_mkinp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real<sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>sr_mkinp_mir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real<sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_mklog(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>sr_rdinp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>sr_rdver(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>,<sp/>real<sp/>*,<sp/>real<sp/>**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>GNU<sp/>Scientific<sp/>Interface<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sramoeba_gsl.c<sp/>-<sp/>downhill<sp/>simplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_amoeba_gsl(gsl_matrix<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>real<sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sr_amoeba_eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sramebsa_gsl.c<sp/>-<sp/>simulated<sp/>annealing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_amebsa_gsl(gsl_matrix<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>real<sp/>*,<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real,<sp/>real<sp/>(*)(),<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*,<sp/>real);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">real<sp/>sr_amotsa(gsl_matrix<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>real<sp/>*,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real<sp/>*,<sp/>real<sp/>(*)(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/>real<sp/>*,<sp/>real);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">real<sp/>sr_fluct(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>srpowell_gsl.c<sp/>-<sp/>Powell&apos;s<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_powell_gsl(gsl_vector<sp/>*,<sp/>gsl_matrix<sp/>*,<sp/>real,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*,<sp/>real<sp/>*);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_linmin_gsl(gsl_vector<sp/>*,<sp/>gsl_vector<sp/>*,<sp/>real<sp/>*,<sp/>real<sp/>(*)());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Drivers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_sa_gsl(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulated<sp/>Annealing<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_sx_gsl(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simplex<sp/>method<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_po_gsl(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Powell&apos;s<sp/>method<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_er_gsl(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>real,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>evaluation<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>file<sp/>input|output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">real<sp/>sr_ckgeo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_ckrot(<ref refid="a00045" kindref="compound">search_atom</ref><sp/>*,<sp/><ref refid="a00041" kindref="compound">search</ref><sp/>*);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sr_evalrf_gsl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_mkinp_gsl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_mkinp_mir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>gsl_vector<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sr_mklog(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_rdinp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_rdver(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>gsl_vector<sp/>*,<sp/>gsl_matrix<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>debye<sp/>temperature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">real<sp/>leed_inp_debye_temp(real<sp/>,<sp/>real<sp/>,<sp/>real);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>help<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>search_usage(FILE<sp/>*);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>search_info();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SEARCH_FUNC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/search_func.h"/>
  </compounddef>
</doxygen>

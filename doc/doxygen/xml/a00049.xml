<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="a00049" kind="file">
    <compoundname>basis.h</compoundname>
    <includes refid="a00054" local="yes">coord.h</includes>
    <includes refid="a00075" local="yes">miller_index.h</includes>
    <includedby refid="a00064" local="yes">latt.h</includedby>
    <includedby refid="a00065" local="yes">lattice.h</includedby>
    <includedby refid="a00081" local="yes">patt_def.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>basis.h</label>
        <link refid="basis.h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>miller_index.h</label>
        <link refid="a00075_source"/>
      </node>
      <node id="6">
        <label>coord.h</label>
        <link refid="a00054_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>patt_def.h</label>
        <link refid="a00081_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>basis.h</label>
        <link refid="basis.h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>patt_ver.h</label>
        <link refid="a00083_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>patt_func.h</label>
        <link refid="a00082_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>latt.h</label>
        <link refid="a00064_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>patt.h</label>
        <link refid="a00079_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>lattice.h</label>
        <link refid="a00065_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>CLEED.H</label>
        <link refid="a00053"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a00003" prot="public">basis</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="a00049_1a2a5bd32760e1ac30dfe0d3b78d6ffe7e" prot="public" static="no">
        <name>BASIS_VECTOR_PTR</name>
        <param><defname>basis</defname></param>
        <param><defname>i</defname></param>
        <initializer>(<ref refid="a00003" kindref="compound">basis</ref>-&gt;a+(i*sizeof(<ref refid="a00006" kindref="compound">coord</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="23" column="9" bodyfile="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00049_1a914699c5ec3d8c9f502d102201f2ab69" prot="public" static="no">
        <name>CALC_ROTATION_MATRIX</name>
        <param><defname>normal</defname></param>
        <param><defname>R</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="25" column="9" bodyfile="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00049_1a26c62afdb7f034c77ec9f3411b9a5be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_matrix_rotate</definition>
        <argsstring>(basis *a, double **R)</argsstring>
        <name>basis_matrix_rotate</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a4350da0ad386742abcc7df161e182352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_ptr_rotate</definition>
        <argsstring>(basis *a, double *R[])</argsstring>
        <name>basis_ptr_rotate</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>R</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1ad5ab6f5e095cedda6c090979332e4a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_angle_rotate</definition>
        <argsstring>(const basis *a, double alpha, double beta, double gamma)</argsstring>
        <name>basis_angle_rotate</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a61d57d948eecc8c9792922ee0281248f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_rotate_basis</definition>
        <argsstring>(const basis *basis, double **R)</argsstring>
        <name>basis_rotate_basis</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a1cdd14e7c5e8245f862275cf6f6e5dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
        <definition>coord* basis_rotate_normal</definition>
        <argsstring>(const coord *nor, double **R)</argsstring>
        <name>basis_rotate_normal</name>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>nor</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a06870a0a6305a2d42aa3db900128eba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
        <definition>coord* basis_rotate_vector_list</definition>
        <argsstring>(const coord *list, size_t n, double **R)</argsstring>
        <name>basis_rotate_vector_list</name>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a8fdeec3dc41a78e4aee0426f2f28f140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_rotate_parallel_to_x_axis_rhs</definition>
        <argsstring>(const basis *basis, double **R)</argsstring>
        <name>basis_rotate_parallel_to_x_axis_rhs</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a953ec160d77829623ab083794935edd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_init</definition>
        <argsstring>()</argsstring>
        <name>basis_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a409f724b9a8d6e7742cdde79f58877e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_free</definition>
        <argsstring>(basis *basis)</argsstring>
        <name>basis_free</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a768ebe78915b8a485c25327fceb0fdc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_copy</definition>
        <argsstring>(basis *dst, const basis *src)</argsstring>
        <name>basis_copy</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a3b0cc522efd8a305e79f6888017fe46d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
        <definition>basis* basis_init_vectors</definition>
        <argsstring>(const coord *a1, const coord *a2, const coord *a3)</argsstring>
        <name>basis_init_vectors</name>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a06942aacb32e0359f9b820e743b553ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
        <definition>coord* basis_get_a1</definition>
        <argsstring>(const basis *basis)</argsstring>
        <name>basis_get_a1</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a0c7fdeaaabe87b386775c49bbfddf101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
        <definition>coord* basis_get_a2</definition>
        <argsstring>(const basis *basis)</argsstring>
        <name>basis_get_a2</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a0d860f3b0d8443e2ce19aa7b4ca340c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
        <definition>coord* basis_get_a3</definition>
        <argsstring>(const basis *basis)</argsstring>
        <name>basis_get_a3</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1af43e05274c28ab122fdd5ed96ab7bfa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_get_vectors</definition>
        <argsstring>(const basis *basis, coord *a1, coord *a2, coord *a3)</argsstring>
        <name>basis_get_vectors</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a1</declname>
        </param>
        <param>
          <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a2</declname>
        </param>
        <param>
          <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a21a4ce97e59d8632cccf787f7cb0c22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00006" kindref="compound">coord</ref> *</type>
        <definition>coord* basis_get_normal</definition>
        <argsstring>(const basis *basis, const miller_hkl *hkl)</argsstring>
        <name>basis_get_normal</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>const <ref refid="a00020" kindref="compound">miller_hkl</ref> *</type>
          <declname>hkl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a5029488cde64aad1c6872f96c4e2e3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t basis_get_allocated_size</definition>
        <argsstring>(const basis *basis)</argsstring>
        <name>basis_get_allocated_size</name>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a02f779391e000e5a677a360f3a656790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_set_a1</definition>
        <argsstring>(basis *basis, const coord *a1)</argsstring>
        <name>basis_set_a1</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1ae9081a6a42af078b3f8c26dd3086bcce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_set_a2</definition>
        <argsstring>(basis *basis, const coord *a2)</argsstring>
        <name>basis_set_a2</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a631e7e46705da69a34aa91d570b2d61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_set_a3</definition>
        <argsstring>(basis *basis, const coord *a3)</argsstring>
        <name>basis_set_a3</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a1643edee41537131c2d5204b9ac805b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_set_vectors</definition>
        <argsstring>(basis *basis, const coord *a1, const coord *a2, const coord *a3)</argsstring>
        <name>basis_set_vectors</name>
        <param>
          <type><ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1aca70a82074fbbbfa0d800af3d429b04f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basis_printf</definition>
        <argsstring>(FILE *f, const basis *basis)</argsstring>
        <name>basis_printf</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="a00003" kindref="compound">basis</ref> *</type>
          <declname>basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00049_1a0e0b35aebdeb4886ef08e56963e2a7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double **</type>
        <definition>double** normal_get_rotation_matrix</definition>
        <argsstring>(const coord *normal)</argsstring>
        <name>normal_get_rotation_matrix</name>
        <param>
          <type>const <ref refid="a00006" kindref="compound">coord</ref> *</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BASIS.H</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>2014<sp/>Liam<sp/>Deacon<sp/>&lt;liam.deacon@diamond.ac.uk&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>3.0<sp/>or<sp/>later.<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Some<sp/>rights<sp/>reserved.<sp/>See<sp/>COPYING,<sp/>AUTHORS.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@license<sp/>GPL-3.0+<sp/>&lt;http://spdx.org/licenses/GPL-3.0+&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Header<sp/>provides<sp/>basis<sp/>vectors<sp/>data<sp/>type<sp/>and<sp/>associated<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Change<sp/>Log:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LD/2014.07.30<sp/>-<sp/>Creation</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BASIS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASIS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;coord.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;miller_index.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASIS_VECTOR_PTR(basis,<sp/>i)<sp/><sp/>(basis-&gt;a+(i*sizeof(coord)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CALC_ROTATION_MATRIX(normal,<sp/>R)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/>if<sp/>(fabs(sqrt(normal-&gt;x*normal-&gt;x<sp/>+<sp/>normal-&gt;y*normal-&gt;y))<sp/>&gt;<sp/>TOLERANCE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[0][0]<sp/>=<sp/>(normal-&gt;z<sp/>/<sp/>coord_get_magnitude(normal))<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(normal-&gt;x<sp/>/<sp/>sqrt(normal-&gt;x*normal-&gt;x<sp/>+<sp/>normal-&gt;y*normal-&gt;y));<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[0][1]<sp/>=<sp/>(normal-&gt;z<sp/>/<sp/>coord_get_magnitude(normal))<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(normal-&gt;y<sp/>/<sp/>sqrt(normal-&gt;x*normal-&gt;x<sp/>+<sp/>normal-&gt;y*normal-&gt;y));<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[0][2]<sp/>=<sp/>-sqrt<sp/>(<sp/>1<sp/>-<sp/>(normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)<sp/>*<sp/>normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[1][0]<sp/>=<sp/>-sqrt<sp/>(<sp/>1<sp/>-<sp/>(normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)<sp/>*<sp/>normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[1][1]<sp/>=<sp/><sp/>normal-&gt;x<sp/>/<sp/>sqrt(normal-&gt;x*normal-&gt;x<sp/>+<sp/>normal-&gt;y*normal-&gt;y);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[1][2]<sp/>=<sp/><sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[2][0]<sp/>=<sp/>sqrt<sp/>(<sp/>1<sp/>-<sp/>(normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)<sp/>*<sp/>normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)))<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(normal-&gt;x<sp/>/<sp/>sqrt(normal-&gt;x*normal-&gt;x<sp/>+<sp/>normal-&gt;y*normal-&gt;y));<sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[2][1]<sp/>=<sp/>sqrt<sp/>(<sp/>1<sp/>-<sp/>(normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)<sp/>*<sp/>normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)))<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(normal-&gt;y<sp/>/<sp/>sqrt(normal-&gt;x*normal-&gt;x<sp/>+<sp/>normal-&gt;y*normal-&gt;y));<sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[2][2]<sp/>=<sp/>normal-&gt;z<sp/>/<sp/>coord_get_magnitude(normal);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[0][0]<sp/>=<sp/>normal-&gt;z<sp/>/<sp/>coord_get_magnitude(normal);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[0][1]<sp/>=<sp/>0.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[0][2]<sp/>=<sp/>-sqrt<sp/>(<sp/>1<sp/>-<sp/>(normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)<sp/>*<sp/>normal-&gt;z<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[1][0]<sp/>=<sp/><sp/>0.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[1][1]<sp/>=<sp/><sp/>1.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[1][2]<sp/>=<sp/><sp/>0.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[2][0]<sp/>=<sp/>sqrt<sp/>(<sp/>1<sp/>-<sp/>(normal-&gt;z<sp/>/<sp/>coord_get_magnitude(normal)<sp/>*<sp/>normal-&gt;z<sp/>/<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_get_magnitude(normal)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[2][1]<sp/>=<sp/>0.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>R[2][2]<sp/>=<sp/>normal-&gt;z<sp/>/<sp/>coord_get_magnitude(normal);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="a00003" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>a[3];</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="a00003" kindref="compound">basis</ref>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_matrix_rotate(<ref refid="a00003" kindref="compound">basis</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**R);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_ptr_rotate(<ref refid="a00003" kindref="compound">basis</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*R[]);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_angle_rotate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_rotate_basis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**R);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="a00006" kindref="compound">coord</ref><sp/>*basis_rotate_normal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*nor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**R);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="a00006" kindref="compound">coord</ref><sp/>*basis_rotate_vector_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**R);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_rotate_parallel_to_x_axis_rhs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**R);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_init();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_free(<ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_copy(<ref refid="a00003" kindref="compound">basis</ref><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*src);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="a00003" kindref="compound">basis</ref><sp/>*basis_init_vectors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a3);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="a00006" kindref="compound">coord</ref><sp/>*basis_get_a1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="a00006" kindref="compound">coord</ref><sp/>*basis_get_a2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="a00006" kindref="compound">coord</ref><sp/>*basis_get_a3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_get_vectors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a1,<sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a2,<sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a3);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="a00006" kindref="compound">coord</ref><sp/>*basis_get_normal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00020" kindref="compound">miller_hkl</ref><sp/>*hkl);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>basis_get_allocated_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_set_a1(<ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_set_a2(<ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a2);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_set_a3(<ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a3);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_set_vectors(<ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*a3);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basis_printf(FILE<sp/>*f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**normal_get_rotation_matrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00006" kindref="compound">coord</ref><sp/>*normal);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cleed<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Basis<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Basis();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Basis(<ref refid="a00003" kindref="compound">basis</ref><sp/>*a);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>~Basis();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setA1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coordinate<sp/>&amp;a1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setA1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1_z);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setA2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coordinate<sp/>&amp;a3);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setA2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2_z);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setA3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coordinate<sp/>&amp;a3);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setA3(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a3_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a3_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a3_z);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coordinate<sp/>&amp;a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coordinate<sp/>&amp;a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Coordinate<sp/>&amp;a3);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Basis<sp/>&amp;<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Basis<sp/>*<ref refid="a00003" kindref="compound">basis</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>getters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;Coordinate<sp/>getA1();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;Coordinate<sp/>getA2();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;Coordinate<sp/>getA3();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>other<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**calculateRotationMatrix();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**R);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00003" kindref="compound">basis</ref><sp/>*<ref refid="a00003" kindref="compound">basis</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Coordinate;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>cleed<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ifdef<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BASIS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/basis.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="a00084" kind="file">
    <compoundname>pattern.h</compoundname>
    <includes refid="a00050" local="yes">basis_vector.h</includes>
    <includes refid="a00074" local="yes">matrix_2x2.h</includes>
    <includes refid="a00096" local="yes">spots.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="a00081" local="yes">patt_def.h</includedby>
    <incdepgraph>
      <node id="390">
        <label>stdbool.h</label>
      </node>
      <node id="387">
        <label>stdlib.h</label>
      </node>
      <node id="384">
        <label>matrix_2x2.h</label>
        <link refid="a00074_source"/>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>spots.h</label>
        <link refid="a00096_source"/>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
      </node>
      <node id="385">
        <label>stddef.h</label>
      </node>
      <node id="389">
        <label>miller_index.h</label>
        <link refid="a00075_source"/>
      </node>
      <node id="382">
        <label>pattern.h</label>
        <link refid="pattern.h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="383">
        <label>basis_vector.h</label>
        <link refid="a00050_source"/>
      </node>
      <node id="391">
        <label>patt_colors.h</label>
        <link refid="a00080_source"/>
      </node>
      <node id="386">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="393">
        <label>patt_def.h</label>
        <link refid="a00081_source"/>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="394">
        <label>patt_ver.h</label>
        <link refid="a00083_source"/>
        <childnode refid="395" relation="include">
        </childnode>
      </node>
      <node id="397">
        <label>patt_func.h</label>
        <link refid="a00082_source"/>
        <childnode refid="395" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>patt.h</label>
        <link refid="a00079_source"/>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>pattern.h</label>
        <link refid="pattern.h"/>
        <childnode refid="393" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>CLEED.H</label>
        <link refid="a00053"/>
      </node>
    </invincdepgraph>
    <innerclass refid="a00027" prot="public">pattern</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="a00084_1a8a84a3a4c22eea5a09ee27567e408d52" prot="public" static="no">
        <type>struct <ref refid="a00027" kindref="compound">pattern</ref></type>
        <definition>typedef struct pattern  pattern</definition>
        <argsstring></argsstring>
        <name>pattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="44" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="a00084_1a334f92d3d635df922fec3fd55133274a" prot="public" static="no" mutable="no">
        <type><ref refid="a00027" kindref="compound">pattern</ref></type>
        <definition>pattern pattern_default</definition>
        <argsstring></argsstring>
        <name>pattern_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00084_1ab93a8df7258e7e416a7fba3869f3fe04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
        <definition>pattern * pattern_alloc</definition>
        <argsstring>(size_t n_domains)</argsstring>
        <name>pattern_alloc</name>
        <param>
          <type>size_t</type>
          <declname>n_domains</declname>
        </param>
        <briefdescription>
<para>Allocates memory for pattern struct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n_domains</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of superstructure domains to allocate. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pattern* Pointer to pattern struct.</para></simplesect>
Allocate memory for pattern structure with <emphasis>n_domains</emphasis>, but do not initialise any members of pattern other than <emphasis>n_domains</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1aaa9add728f923e2b95413e3e68263cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
        <definition>pattern * pattern_init</definition>
        <argsstring>(size_t n_domains)</argsstring>
        <name>pattern_init</name>
        <param>
          <type>size_t</type>
          <declname>n_domains</declname>
        </param>
        <briefdescription>
<para>Allocate memory and initialise pattern struct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n_domains</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of superstructure domains to allocate. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pattern* Pointer to pattern struct.</para></simplesect>
Allocate memory for pattern structure with <emphasis>n_domains</emphasis>, and initialise members to default values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1aa5096149b9f048eed5048d5266b2f82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
        <definition>pattern * pattern_read</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>pattern_read</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Allocates memory for pattern struct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n_domains</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of superstructure domains to allocate. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pattern* Pointer to pattern struct.</para></simplesect>
Allocate memory for pattern structure with <emphasis>n_domains</emphasis>, but do not initialise any members of pattern other than <emphasis>n_domains</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a09e77830f9f0dd913fc9a1dc8b60ad7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_free</definition>
        <argsstring>(pattern *pat)</argsstring>
        <name>pattern_free</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a57bdfd84d8a29735b7def69a8b9f2713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pattern_get_radius</definition>
        <argsstring>(pattern *pat)</argsstring>
        <name>pattern_get_radius</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1ac3cd92961e71dc2669103b12ee9d8dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pattern_is_square</definition>
        <argsstring>(const pattern *pat)</argsstring>
        <name>pattern_is_square</name>
        <param>
          <type>const <ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1ac275c01f616bfc187d973c4072ed6b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pattern_domain_is_commensurate</definition>
        <argsstring>(const pattern *pat, size_t domain)</argsstring>
        <name>pattern_domain_is_commensurate</name>
        <param>
          <type>const <ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1ab2bda22209a00e4c37b6c8a906c34468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t pattern_get_n_domains</definition>
        <argsstring>(pattern *pat)</argsstring>
        <name>pattern_get_n_domains</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a010ac8b70484161e04b438f3752a1b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* pattern_get_title</definition>
        <argsstring>(pattern *pat)</argsstring>
        <name>pattern_get_title</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1aa58cfc97117282d082865dfe213e7bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_printf</definition>
        <argsstring>(FILE *stream, pattern *pat)</argsstring>
        <name>pattern_printf</name>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a462d3eeeb4e48b875dec513eee9ac7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_set_a1</definition>
        <argsstring>(pattern *pat, basis_vector *a1)</argsstring>
        <name>pattern_set_a1</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type><ref refid="a00004" kindref="compound">basis_vector</ref> *</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a01b586689cc18b3f4306ba442a7ac19f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_set_a2</definition>
        <argsstring>(pattern *pat, basis_vector *a2)</argsstring>
        <name>pattern_set_a2</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type><ref refid="a00004" kindref="compound">basis_vector</ref> *</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a35e7b1d37da3497e511e4a6ed5162b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_set_radius</definition>
        <argsstring>(pattern *pat, double radius)</argsstring>
        <name>pattern_set_radius</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1afae409d685694c6e9c941a9d71892a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_set_title</definition>
        <argsstring>(pattern *pat, char *title)</argsstring>
        <name>pattern_set_title</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a6d40ed42ecb0bfc6e94755cce8f91575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_set_square</definition>
        <argsstring>(pattern *pat, bool is_square)</argsstring>
        <name>pattern_set_square</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_square</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a38d85db366a46a313af0c020ad3460b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pattern_set_max_domains</definition>
        <argsstring>(pattern *pat, size_t n_domains)</argsstring>
        <name>pattern_set_max_domains</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_domains</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a46035a9e92a51330ec8e0580c214eb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_set_superstructure_matrix</definition>
        <argsstring>(pattern *pat, matrix_2x2 *mat, size_t domain)</argsstring>
        <name>pattern_set_superstructure_matrix</name>
        <param>
          <type><ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type><ref refid="a00019" kindref="compound">matrix_2x2</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a66647fec592653eed3abfd94d18d2d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="a00019" kindref="compound">matrix_2x2</ref> *</type>
        <definition>const matrix_2x2* get_superstructure_matrix</definition>
        <argsstring>(const pattern *pat, size_t domain)</argsstring>
        <name>get_superstructure_matrix</name>
        <param>
          <type>const <ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a2a518e51b6032d65ef1611da2920d5c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00043" kindref="compound">spots</ref> *</type>
        <definition>spots* pattern_calculate_substrate_spots</definition>
        <argsstring>(const pattern *pat)</argsstring>
        <name>pattern_calculate_substrate_spots</name>
        <param>
          <type>const <ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00084_1a855eb194dec6abd85b137eea66a615c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00043" kindref="compound">spots</ref> *</type>
        <definition>spots* pattern_calculate_superstructure_spots</definition>
        <argsstring>(const pattern *pat, size_t domain)</argsstring>
        <name>pattern_calculate_superstructure_spots</name>
        <param>
          <type>const <ref refid="a00027" kindref="compound">pattern</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h" line="248" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PATTERN.H</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>2014<sp/>Liam<sp/>Deacon<sp/>&lt;liam.deacon@diamond.ac.uk&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>3.0<sp/>or<sp/>later.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Some<sp/>rights<sp/>reserved.<sp/>See<sp/>COPYING,<sp/>AUTHORS.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@license<sp/>GPL-3.0+<sp/>&lt;http://spdx.org/licenses/GPL-3.0+&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Header<sp/>file<sp/>for<sp/>pattern<sp/>struct<sp/>and<sp/>associated<sp/>functions.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Changes:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LD/2014.07.20<sp/>-<sp/>creation</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PATTERN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PATTERN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;basis_vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;matrix_2x2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spots.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="a00027" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="a00027" kindref="compound">pattern</ref><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37" refid="a00027_1a1e130b35e64c6e23babc4be5bec5773f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="a00027_1a1e130b35e64c6e23babc4be5bec5773f" kindref="member">title</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="a00027_1ab1e5e39e2a5d7d7b24bfbde090a83582" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00004" kindref="compound">basis_vector</ref><sp/><ref refid="a00027_1ab1e5e39e2a5d7d7b24bfbde090a83582" kindref="member">a1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="a00027_1a9d08eb45219b313e12de69d3d2a47101" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00004" kindref="compound">basis_vector</ref><sp/><ref refid="a00027_1a9d08eb45219b313e12de69d3d2a47101" kindref="member">a2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="a00027_1acf3f85a3252d39f7f4446dd2474eeb81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="a00019" kindref="compound">matrix_2x2</ref><sp/>*<ref refid="a00027_1acf3f85a3252d39f7f4446dd2474eeb81" kindref="member">M_SS</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="a00027_1a1a1b1451ebad64431906dde59e571588" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="a00027_1a1a1b1451ebad64431906dde59e571588" kindref="member">n_domains</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="a00027_1a0f913de4cf56076da18287149d16b16e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="a00027_1a0f913de4cf56076da18287149d16b16e" kindref="member">radius</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="a00027_1aaa0cbb010e49c965dcc5a1edf5c04d21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a00027_1aaa0cbb010e49c965dcc5a1edf5c04d21" kindref="member">square</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><ref refid="a00027" kindref="compound">pattern</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>pattern_default;<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pattern<sp/>functions<sp/>*/</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pattern_alloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_domains);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pattern_init(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_domains);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pattern_read(FILE<sp/>*file);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_free(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pattern_get_radius(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pattern_is_square(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pattern_domain_is_commensurate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>domain);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pattern_get_n_domains(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern_get_title(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_printf(FILE<sp/>*stream,<sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_set_a1(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/><ref refid="a00004" kindref="compound">basis_vector</ref><sp/>*a1);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_set_a2(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/><ref refid="a00004" kindref="compound">basis_vector</ref><sp/>*a2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_set_radius(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_set_title(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_set_square(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_square);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pattern_set_max_domains(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_domains);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_set_superstructure_matrix(<ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00019" kindref="compound">matrix_2x2</ref><sp/>*<ref refid="a00018" kindref="compound">mat</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>domain);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00019" kindref="compound">matrix_2x2</ref><sp/>*get_superstructure_matrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>domain);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="a00043" kindref="compound">spots</ref><sp/>*pattern_calculate_substrate_spots(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="a00043" kindref="compound">spots</ref><sp/>*pattern_calculate_superstructure_spots(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>*pat,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>domain);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cleed<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keyword">class<sp/></highlight><highlight class="normal">Pattern<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>Pattern();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>~Pattern();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTitle(std::string<sp/>title);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasisVectorA1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBasisVectorA2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setNumberOfDomains(std::size_t<sp/>ndom);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRadius(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSuperStructureMatrix(Matrix2x2<sp/><ref refid="a00018" kindref="compound">mat</ref>,<sp/>std::size_t<sp/>domain);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSquare(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSquare);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>getTitle();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getNumberOfDomains();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getRadius();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;double&gt;<sp/>getBasisVectorA1();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;double&gt;<sp/>getBasisVectorA2();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;Matrix2x2&gt;<sp/>getSuperStructureMatrices();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSquare();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00027" kindref="compound">pattern</ref><sp/>pat;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>cleed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PATTERN_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Liam/Dropbox/Windows Tweaks/CLEED_tools_win32/cleed/src/CLEED/src/include/pattern.h"/>
  </compounddef>
</doxygen>
